@page "/"
@using ContainerInspectionApp.Services
@using ContainerInspectionApp.Models
@inherits BasePage

<PageTitle>Home</PageTitle>

@if (!_isDatabaseConnected)
{
    <MudAlert Severity="Severity.Error" Class="mb-4">
        Unable to connect to the database. Please check your connection string and try again.
    </MudAlert>
}
else
{
    <MudText Typo="Typo.h3" GutterBottom="true">Container Inspection App</MudText>
    <MudText Class="mb-8">Welcome to the Container Inspection App, powered by MudBlazor and .NET 8!</MudText>

    <MudButton Variant="Variant.Filled" Color="Color.Error" OnClick="ResetDatabase" Class="mb-4">Reset Database</MudButton>

    <MudText Typo="Typo.h6" Class="mt-4">Database Statistics:</MudText>
    <MudText>Total Containers: @totalContainers</MudText>
    @if (lastContainer != null)
    {
        <MudText>Last Added: ID @lastContainer.ContainerId at @lastContainer.TimeAdded.ToString("g")</MudText>
    }

    @if (!string.IsNullOrEmpty(message))
    {
        <MudAlert Severity="@alertSeverity" Class="mt-4">@message</MudAlert>
    }
}

<MudAlert Severity="Severity.Normal" Class="mt-4">
    You can find documentation and examples on our website here:
    <MudLink Href="https://mudblazor.com" Target="_blank" Typo="Typo.body2" Color="Color.Primary">
        <b>www.mudblazor.com</b>
    </MudLink>
</MudAlert>

@code {
    private string message = "";
    private MudBlazor.Severity alertSeverity = MudBlazor.Severity.Success;
    private int totalContainers = 0;
    private Container? lastContainer = null;

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();
        if (_isDatabaseConnected)
        {
            await LoadDatabaseStats();
        }
    }

    private async Task LoadDatabaseStats()
    {
        totalContainers = await ContainerTableOperations.GetContainerCount();
        lastContainer = await ContainerTableOperations.GetLastAddedContainer();
    }

    private async Task ResetDatabase()
    {
        var result = await ContainerTableOperations.ResetDatabase();
        if (result)
        {
            message = "Database reset successfully!";
            alertSeverity = MudBlazor.Severity.Success;
            await LoadDatabaseStats();
        }
        else
        {
            message = "Failed to reset database. Please try again.";
            alertSeverity = MudBlazor.Severity.Error;
        }
    }
}